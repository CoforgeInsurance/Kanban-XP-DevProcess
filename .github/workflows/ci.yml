name: CI/CD Pipeline

# Runs on every push and pull request to ensure code quality
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Language-agnostic checks
  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Check for merge conflicts markers
        run: |
          if grep -r "<<<<<<< \|======= \|>>>>>>>" --exclude-dir=.git .; then
            echo "Merge conflict markers found!"
            exit 1
          fi

      - name: Check file sizes
        run: |
          find . -type f -size +1M -not -path "*/node_modules/*" -not -path "*/.git/*" | while read file; do
            echo "Large file detected: $file"
          done

  # .NET 8.0 Tests
  dotnet-tests:
    name: .NET Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      
      - name: Restore dependencies
        run: dotnet restore
        working-directory: ./src
      
      - name: Build solution
        run: dotnet build --configuration Release --no-restore
        working-directory: ./src
      
      - name: Run unit tests (TDD)
        run: dotnet test --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
        working-directory: ./src
      
      - name: Run BDD tests (SpecFlow)
        run: dotnet test tests/AncientWisdom.BDD.Tests/*.csproj --configuration Release --no-build --verbosity normal
        working-directory: ./src
        continue-on-error: true
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        with:
          files: ./src/coverage/**/coverage.cobertura.xml
          fail_ci_if_error: false
